version: '3.8'

services:

  web:
    restart: always
    build:
      context: ../datefix-1
      dockerfile: Dockerfile
    image: 172255399645.dkr.ecr.us-east-2.amazonaws.com/datefix:web
    expose:
      - "8000"
    links:
      - redis:redis
    env_file: .env
    command: /usr/bin/gunicorn Datefix.wsgi:application -w 2 -b :8000

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    image: 172255399645.dkr.ecr.us-east-2.amazonaws.com/datefix:nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.prod.proxy-companion
    depends_on:
      - nginx-proxy

  nginx:
    restart: always
    build: ./nginx/
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=datefix.me
      - NGINX_PORT=80
      - DAPHNE_HOST=daphne
      - DAPHEN_PORT=8000
    depends_on:
      - daphne
    links:
      - daphne
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/service.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  redis:
    restart: always
    image: redis:latest
    ports:
    - "6379:6379"
    expose:
      - "6379"

  datefix-1:
    build: .

  worker:
    image: "datefix-1:latest"
    build: .
    working_dir: /home/datefix-1
    command: bash -c "python manage.py runworker channels -v2"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    links:
      - redis
  daphne:
    image: "datefix-1:latest"
    build: .
    working_dir: /home/datefix-1
    command: bash -c "daphne -b 0.0.0.0 -p 8000 Datefix.asgi:channel_layer"
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    links:
      - redis
